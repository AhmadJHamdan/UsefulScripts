# Setting Log Directory
# Get current directory
$currentDir = $PWD.Path

# Define the output file Path
$logPath = Join-Path -Path $currentDir -ChildPath "log.txt"

# Getting Device details
Write-Output "Getting Device Details..." | Out-File -FilePath $logPath -Append
# Get hostname
$hostname = $env:COMPUTERNAME

# Get IP addresses (IPv4, non-loopback)
$ipAddresses = Get-NetIPAddress -AddressFamily IPv4 `
                | Where-Object { $_.IPAddress -notlike "169.*" -and $_.IPAddress -ne "127.0.0.1" } `
                | Select-Object -ExpandProperty IPAddress

# Get domain name (Active Directory domain or workgroup)
$domain = (Get-WmiObject Win32_ComputerSystem).Domain

# Output the results
Write-Output "Hostname   : $hostname" | Out-File -FilePath $logPath -Append
Write-Output "Domain     : $domain" | Out-File -FilePath $logPath -Append
Write-Output "IP Address : $($ipAddresses -join ', ')" | Out-File -FilePath $logPath -Append

# Check if Microsoft SQL Server is running
Write-Output "`nChecking Microsoft SQL Server status..." | Out-File -FilePath $logPath -Append
$SQL_SERVICES = "MSSQLSERVER"

try {
    $service = Get-Service -Name $SQL_SERVICES -ErrorAction Stop

    if ($service.Status -eq 'Running') {
        Write-Output "[+] SQL Server service '$SQL_SERVICES' is running." | Out-File -FilePath $logPath -Append
    } else {
        Write-Output "[-] SQL Server service '$SQL_SERVICES' is NOT running. Current status: $($service.Status)" | Out-File -FilePath $logPath -Append
    }
} catch {
    Write-Output "[-] Service '$SQL_SERVICES' not found: $_" | Out-File -FilePath $logPath -Append
}

# Check if IIS Server is running
Write-Output "`nChecking IIS Server status..." | Out-File -FilePath $logPath -Append
$IIS_SERVICES = 'W3SVC', 'WAS', 'IISADMIN'

foreach ($name in $IIS_SERVICES) {
    try {
        $s = Get-Service -Name $name -ErrorAction Stop
        Write-Output "[+] $name is $($s.Status)" | Out-File -FilePath $logPath -Append
    } catch {
        Write-Output "[-] Service '$name' not found." | Out-File -FilePath $logPath -Append
    }
}

# Check if processes are listening on common web ports
Write-Output "`nListing any processes that are listening to common web ports..." | Out-File -FilePath $logPath -Append
$ports = 80, 443, 8080, 8009, 8443

foreach ($port in $ports) {
    $connections = Get-NetTCPConnection -LocalPort $port -State Listen -ErrorAction SilentlyContinue
    foreach ($conn in $connections) {
        $proc = Get-Process -Id $conn.OwningProcess -ErrorAction SilentlyContinue
        if ($proc) {
            Write-Output "Port $port is being used by: $($proc.Name) (PID: $($proc.Id))" | Out-File -FilePath $logPath -Append
        }
    }
}

Write-Output "`n===================================================================`n" | Out-File -FilePath $logPath -Append
